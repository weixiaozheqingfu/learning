<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glitter.spring.boot.persistence.dao.IOauthDeveloperRMDao">
    <resultMap id="BaseResultMap" type="com.glitter.spring.boot.bean.OauthDeveloperRM">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="developer_id" property="developerId" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="union_id" property="unionId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="baseColumns">
        id
        ,developer_id
        ,user_id
        ,union_id
        ,create_time
        ,update_time
    </sql>

    <sql id="whereSql">
        <if test="id != null">
            and id=#{id}
		</if>
        <if test="developerId != null">
            and developer_id=#{developerId}
		</if>
        <if test="userId != null">
            and user_id=#{userId}
		</if>
        <if test="unionId != null ">
            and union_id=#{unionId}
		</if>
        <if test="createTime != null">
            and create_time=#{createTime}
		</if>
        <if test="updateTime != null">
            and update_time=#{updateTime}
		</if>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.glitter.spring.boot.bean.OauthDeveloperRM">
        insert into oauth_developer_r_m
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="developerId != null">
                developer_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="unionId != null ">
                union_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="developerId != null">
                #{developerId},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="unionId != null ">
                #{unionId},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
		</trim>
    </insert>

    <delete id="deleteById">
        delete from oauth_developer_r_m where id =#{id}
    </delete>

    <delete id="deleteByIds">
        delete from oauth_developer_r_m where id in
        <foreach collection="array" item="item" index="index"  open="(" close=")" separator=",">
            #{item}
        </foreach>
	</delete>

    <delete id="delete" parameterType="com.glitter.spring.boot.bean.OauthDeveloperRM">
        delete from oauth_developer_r_m
        <where>
            <include refid="whereSql"/>
        </where>
    </delete>

    <update id="updateById" parameterType="com.glitter.spring.boot.bean.OauthDeveloperRM">
        update oauth_developer_r_m  set
        <trim suffixOverrides=",">
        <if test="developerId != null">
            developer_id=#{developerId},
        </if>
        <if test="userId != null">
            user_id=#{userId},
        </if>
        <if test="unionId != null ">
            union_id=#{unionId},
        </if>
        <if test="createTime != null">
            create_time=#{createTime},
        </if>
        <if test="updateTime != null">
            update_time=#{updateTime},
        </if>
        </trim>
        where id =#{id}
	</update>

    <select id="getById" resultMap="BaseResultMap">
	    select <include refid="baseColumns"/> from oauth_developer_r_m where id =#{id}
	</select>

    <select id="getByIds" resultMap="BaseResultMap">
	    select <include refid="baseColumns"/> from oauth_developer_r_m
	    where id in
	    <foreach collection="array" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
	</select>

	<select id="get" resultMap="BaseResultMap" parameterType="com.glitter.spring.boot.bean.OauthDeveloperRM">
        select <include refid="baseColumns"/> from oauth_developer_r_m
        <where>
            <include refid="whereSql"/> limit 1
        </where>
	</select>

	<select id="findAllList" resultMap="BaseResultMap">
	     select <include refid="baseColumns"/> from oauth_developer_r_m
	</select>

	<select id="findList"  parameterType="com.glitter.spring.boot.bean.OauthDeveloperRM" resultMap="BaseResultMap">
        select <include refid="baseColumns"/> from oauth_developer_r_m
        <where>
            <include refid="whereSql"/>
        </where>
	</select>

	<select id="getCount"  parameterType="com.glitter.spring.boot.bean.OauthDeveloperRM" resultType="java.lang.Integer">
        select count(1) from oauth_developer_r_m
        <where>
            <include refid="whereSql"/>
        </where>
    </select>

</mapper>