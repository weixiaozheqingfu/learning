global
daemon
  # nbproc 1
  # pidfile /var/run/haproxy.pid
  # 工作目录
chroot /usr/local/etc/haproxy

defaults
  #[err warning info debug]
log 127.0.0.1 local0 err
  #默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK
mode http
  #两次连接失败就认为是服务器不可用，也可以通过后面设置
retries 2
  #当serverId对应的服务器挂掉后，强制定向到其他健康的服务器
option redispatch
  #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接
option abortonclose
  #日志中不记录负载均衡的心跳检测记录
option dontlognull
  #默认的最大连接数
maxconn 4096
  #连接超时
timeout connect 5000ms
  #客户端超时
timeout client 30000ms
  #服务器超时
timeout server 30000ms
  #心跳检测超时
timeout check 2000
  ######## 监控界面配置 #################
listen admin_status
  # 监控界面访问信息
bind 0.0.0.0:8888
mode http
  # URI相对地址
stats uri /dbs
  # 统计报告格式
stats realm Global\ statistics
  # 登录账户信息
stats auth admin:123456
  ########frontend配置##############

  ######## mysql负载均衡配置 ###############
listen proxy-mysql
bind 0.0.0.0:3306
mode tcp
  # 负载均衡算法
  # static-rr 权重, leastconn 最少连接, source 请求IP, 轮询 roundrobin
balance roundrobin
  # 日志格式
option tcplog
  # 在 mysql 创建一个没有权限的haproxy用户，密码为空。 haproxy用户
  # create user 'haproxy'@'%' identified by ''; FLUSH PRIVILEGES;
option mysql-check user haproxy
  # 这里是容器中的IP地址，由于配置的是轮询roundrobin，weight 权重其实没有生效,如果是docker-compose,这里可以配置mysql在docker内部网络中的别名
server MYSQL_1 172.31.240.101:33061 check weight 1 maxconn 2000
server MYSQL_2 172.31.240.101:33062 check weight 1 maxconn 2000
server MYSQL_3 172.31.240.101:33063 check weight 1 maxconn 2000
# 使用keepalive检测死链
# option tcpka
#########################################

