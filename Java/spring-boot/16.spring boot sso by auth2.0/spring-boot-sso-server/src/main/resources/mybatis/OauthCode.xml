<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glitter.spring.boot.persistence.dao.IOauthCodeDao">
    <resultMap id="BaseResultMap" type="com.glitter.spring.boot.bean.OauthCode">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="jsessionid" property="jsessionid" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="client_id" property="clientId" jdbcType="VARCHAR"/>
        <result column="scope" property="scope" jdbcType="VARCHAR"/>
        <result column="interface_uri" property="interfaceUri" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="expire_in" property="expireIn" jdbcType="BIGINT"/>
        <result column="expire_time" property="expireTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="baseColumns">
        id
        ,jsessionid
        ,user_id
        ,client_id
        ,scope
        ,interface_uri
        ,code
        ,expire_in
        ,expire_time
        ,create_time
        ,update_time
    </sql>

    <sql id="whereSql">
        <if test="id != null">
            and id=#{id}
		</if>
        <if test="jsessionid != null ">
            and jsessionid=#{jsessionid}
		</if>
        <if test="userId != null">
            and user_id=#{userId}
		</if>
        <if test="clientId != null ">
            and client_id=#{clientId}
		</if>
        <if test="scope != null ">
            and scope=#{scope}
		</if>
        <if test="interfaceUri != null ">
            and interface_uri=#{interfaceUri}
		</if>
        <if test="code != null ">
            and code=#{code}
		</if>
        <if test="expireIn != null">
            and expire_in=#{expireIn}
		</if>
        <if test="expireTime != null">
            and expire_time=#{expireTime}
		</if>
        <if test="createTime != null">
            and create_time=#{createTime}
		</if>
        <if test="updateTime != null">
            and update_time=#{updateTime}
		</if>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.glitter.spring.boot.bean.OauthCode">
        insert into oauth_code
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="jsessionid != null ">
                jsessionid,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="clientId != null ">
                client_id,
            </if>
            <if test="scope != null ">
                scope,
            </if>
            <if test="interfaceUri != null ">
                interface_uri,
            </if>
            <if test="code != null ">
                code,
            </if>
            <if test="expireIn != null">
                expire_in,
            </if>
            <if test="expireTime != null">
                expire_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="jsessionid != null ">
                #{jsessionid},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="clientId != null ">
                #{clientId},
            </if>
            <if test="scope != null ">
                #{scope},
            </if>
            <if test="interfaceUri != null ">
                #{interfaceUri},
            </if>
            <if test="code != null ">
                #{code},
            </if>
            <if test="expireIn != null">
                #{expireIn},
            </if>
            <if test="expireTime != null">
                #{expireTime},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
		</trim>
    </insert>

    <delete id="deleteById">
        delete from oauth_code where id =#{id}
    </delete>

    <delete id="deleteByIds">
        delete from oauth_code where id in
        <foreach collection="array" item="item" index="index"  open="(" close=")" separator=",">
            #{item}
        </foreach>
	</delete>

    <delete id="delete" parameterType="com.glitter.spring.boot.bean.OauthCode">
        delete from oauth_code
        <where>
            <include refid="whereSql"/>
        </where>
    </delete>

    <update id="updateById" parameterType="com.glitter.spring.boot.bean.OauthCode">
        update oauth_code  set
        <trim suffixOverrides=",">
        <if test="jsessionid != null ">
            jsessionid=#{jsessionid},
        </if>
        <if test="userId != null">
            user_id=#{userId},
        </if>
        <if test="clientId != null ">
            client_id=#{clientId},
        </if>
        <if test="scope != null ">
            scope=#{scope},
        </if>
        <if test="interfaceUri != null ">
            interface_uri=#{interfaceUri},
        </if>
        <if test="code != null ">
            code=#{code},
        </if>
        <if test="expireIn != null">
            expire_in=#{expireIn},
        </if>
        <if test="expireTime != null">
            expire_time=#{expireTime},
        </if>
        <if test="createTime != null">
            create_time=#{createTime},
        </if>
        <if test="updateTime != null">
            update_time=#{updateTime},
        </if>
        </trim>
        where id =#{id}
	</update>

    <select id="getById" resultMap="BaseResultMap">
	    select <include refid="baseColumns"/> from oauth_code where id =#{id}
	</select>

    <select id="getByIds" resultMap="BaseResultMap">
	    select <include refid="baseColumns"/> from oauth_code
	    where id in
	    <foreach collection="array" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
	</select>

	<select id="get" resultMap="BaseResultMap" parameterType="com.glitter.spring.boot.bean.OauthCode">
        select <include refid="baseColumns"/> from oauth_code
        <where>
            <include refid="whereSql"/> limit 1
        </where>
	</select>

	<select id="findAllList" resultMap="BaseResultMap">
	     select <include refid="baseColumns"/> from oauth_code
	</select>

	<select id="findList"  parameterType="com.glitter.spring.boot.bean.OauthCode" resultMap="BaseResultMap">
        select <include refid="baseColumns"/> from oauth_code
        <where>
            <include refid="whereSql"/>
        </where>
	</select>

	<select id="getCount"  parameterType="com.glitter.spring.boot.bean.OauthCode" resultType="java.lang.Integer">
        select count(1) from oauth_code
        <where>
            <include refid="whereSql"/>
        </where>
    </select>

</mapper>