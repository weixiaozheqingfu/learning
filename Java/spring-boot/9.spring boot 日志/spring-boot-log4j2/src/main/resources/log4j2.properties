status = DEBUG
monitorInterval=1800

# 内部变量
property.LOG_PATH=/home/logs
property.LOG_PROJECT_NAME=@project.artifactId@
property.LOG_FILE_FULL_PATH=${LOG_PATH}/${LOG_PROJECT_NAME}.log
property.LOG_PATTERN=[${LOG_PROJECT_NAME}] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %-5p => %c.%M(%F:%L) - %m%n
property.ROLLING_FILE_MAX_SIZE=50MB
property.ROLLING_FILE_MAX_NUM=20
property.LOG_LEVEL_ROOT=ERROR
property.LOG_LEVEL_SPRING=WARN
property.LOG_LEVEL_MYBATIS=DEBUG
property.LOG_LEVEL_GLITTER=INFO

# appender追加器后面的名字可以自定义
# 貌似使用properties配置文件的方式一个追加器只能配置一个ThresholdFilter,所以这个过滤的结果就是INFO及以上级别的日志会输出
appender.console.type=Console
appender.console.name=ConsoleAppender
appender.console.target=SYSTEM_OUT
appender.console.filter.threshold.type=ThresholdFilter
appender.console.filter.threshold.level=INFO
appender.console.filter.threshold.onMatch=ACCEPT
appender.console.filter.threshold.onMisMatch=DENY
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=${LOG_PATTERN}

# 貌似使用properties配置文件的方式一个追加器只能配置一个ThresholdFilter,所以这个过滤的结果就是DEBUG及以上级别的日志会输出
appender.RollingFileDebug.type=RollingFile
appender.RollingFileDebug.name=RollingFileDebug
appender.RollingFileDebug.filter.threshold.type=ThresholdFilter
appender.RollingFileDebug.filter.threshold.level=DEBUG
appender.RollingFileDebug.filter.threshold.onMatch=ACCEPT
appender.RollingFileDebug.filter.threshold.onMisMatch=DENY
appender.RollingFileDebug.fileName=${ROLLING_FILE_NAME}-debug.log
appender.RollingFileDebug.filePattern=${ROLLING_FILE_PATTERN}-debug-%i.log.gz
appender.RollingFileDebug.layout.type=PatternLayout
appender.RollingFileDebug.layout.pattern=${LOG_PATTERN}
appender.RollingFileDebug.policies.type=Policies
# appender.RollingFileDebug.policies.time.type=TimeBasedTriggeringPolicy
# appender.RollingFileDebug.policies.time.interval=2
# appender.RollingFileDebug.policies.time.modulate=true
appender.RollingFileDebug.policies.size.type=SizeBasedTriggeringPolicy
appender.RollingFileDebug.policies.size.size=${ROLLING_FILE_MAX_SIZE}
appender.RollingFileDebug.strategy.type=DefaultRolloverStrategy
appender.RollingFileDebug.strategy.max=${ROLLING_FILE_MAX_NUM}

# 貌似使用properties配置文件的方式一个追加器只能配置一个ThresholdFilter,所以这个过滤的结果就是INFO及以上级别的日志会输出
appender.RollingFileInfo.type=RollingFile
appender.RollingFileInfo.name=RollingFileInfo
appender.RollingFileInfo.filter.threshold.type=ThresholdFilter
appender.RollingFileInfo.filter.threshold.level=INFO
appender.RollingFileInfo.filter.threshold.onMatch=ACCEPT
appender.RollingFileInfo.filter.threshold.onMisMatch=DENY
appender.RollingFileInfo.fileName=${ROLLING_FILE_NAME}-info.log
appender.RollingFileInfo.filePattern=${ROLLING_FILE_PATTERN}-info-%i.log.gz
appender.RollingFileInfo.layout.type=PatternLayout
appender.RollingFileInfo.layout.pattern=${LOG_PATTERN}
appender.RollingFileInfo.policies.type=Policies
appender.RollingFileInfo.policies.size.type=SizeBasedTriggeringPolicy
appender.RollingFileInfo.policies.size.size=${ROLLING_FILE_MAX_SIZE}
appender.RollingFileInfo.strategy.type=DefaultRolloverStrategy
appender.RollingFileInfo.strategy.max=${ROLLING_FILE_MAX_NUM}

# 貌似使用properties配置文件的方式一个追加器只能配置一个ThresholdFilter,所以这个过滤的结果就是WARN及以上级别的日志会输出
appender.RollingFileWarn.type=RollingFile
appender.RollingFileWarn.name=RollingFileWarn
appender.RollingFileWarn.filter.threshold.type=ThresholdFilter
appender.RollingFileWarn.filter.threshold.level=WARN
appender.RollingFileWarn.filter.threshold.onMatch=ACCEPT
appender.RollingFileWarn.filter.threshold.onMisMatch=DENY
appender.RollingFileWarn.fileName=${ROLLING_FILE_NAME}-warn.log
appender.RollingFileWarn.filePattern=${ROLLING_FILE_PATTERN}-warn-%i.log.gz
appender.RollingFileWarn.layout.type=PatternLayout
appender.RollingFileWarn.layout.pattern=${LOG_PATTERN}
appender.RollingFileWarn.policies.type=Policies
appender.RollingFileWarn.policies.size.type=SizeBasedTriggeringPolicy
appender.RollingFileWarn.policies.size.size=${ROLLING_FILE_MAX_SIZE}
appender.RollingFileWarn.strategy.type=DefaultRolloverStrategy
appender.RollingFileWarn.strategy.max=${ROLLING_FILE_MAX_NUM}

# 貌似使用properties配置文件的方式一个追加器只能配置一个ThresholdFilter,所以这个过滤的结果就是ERROR及以上级别的日志会输出
appender.RollingFileError.type=RollingFile
appender.RollingFileError.name=RollingFileError
appender.RollingFileError.filter.threshold.type=ThresholdFilter
appender.RollingFileError.filter.threshold.level=ERROR
appender.RollingFileError.filter.threshold.onMatch=ACCEPT
appender.RollingFileError.filter.threshold.onMisMatch=DENY
appender.RollingFileError.fileName=${ROLLING_FILE_NAME}-error.log
appender.RollingFileError.filePattern=${ROLLING_FILE_PATTERN}-error-%i.log.gz
appender.RollingFileError.layout.type=PatternLayout
appender.RollingFileError.layout.pattern=${LOG_PATTERN}
appender.RollingFileError.policies.type=Policies
appender.RollingFileError.policies.size.type=SizeBasedTriggeringPolicy
appender.RollingFileError.policies.size.size=${ROLLING_FILE_MAX_SIZE}
appender.RollingFileError.strategy.type=DefaultRolloverStrategy
appender.RollingFileError.strategy.max=${ROLLING_FILE_MAX_NUM}


# 配置rootLogger
rootLogger.appenderRef.console.ref=ConsoleAppender
rootLogger.appenderRef.console.level=WARN

rootLogger.appenderRef.RollingFileDebug.ref=RollingFileDebug
rootLogger.appenderRef.RollingFileDebug.level=DEBUG

rootLogger.appenderRef.RollingFileInfo.ref=RollingFileInfo
rootLogger.appenderRef.RollingFileInfo.level=INFO

rootLogger.appenderRef.RollingFileWarn.ref=RollingFileWarn
rootLogger.appenderRef.RollingFileWarn.level=WARN

rootLogger.appenderRef.RollingFileError.ref=RollingFileError
rootLogger.appenderRef.RollingFileError.level=ERROR


# 配置logger
logger.glitter.name=com.glitter.spring.boot
logger.glitter.level=INFO
logger.glitter.additivity=true

logger.springframework.name=org.springframework
logger.springframework.level=DEBUG
logger.springframework.additivity=true

logger.ibatis.name=org.ibatis
logger.ibatis.level=DEBUG
logger.ibatis.additivity=true
# 输出地不配置会继承rootLogger,本例中是四个rolling目的地都有
# logger.mybatis.appenderRef.console.ref=ConsoleAppender
# logger.mybatis.appenderRef.file.ref=RollingFileDebug










